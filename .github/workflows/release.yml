name: Build and Release

on:
  push:
    tags:
      - 'v*' # Trigger on version tags (e.g., v1.0.0)

jobs:
  build:
    name: Build and Release
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        arch: [aarch64, x86_64, armv7]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install required Rust targets
        run: |
            if [[ "${{ matrix.arch }}" == "armv7" ]]; then
                rustup target add ${{ matrix.arch }}-unknown-linux-gnueabihf
            elif [[ "${{ matrix.arch }}" == "aarch64" ]]; then
                rustup target add ${{ matrix.arch }}-unknown-linux-gnu
                rustup target add ${{ matrix.arch }}-apple-darwin
            elif [[ "${{ matrix.arch }}" == "x86_64" ]]; then
                rustup target add ${{ matrix.arch }}-unknown-linux-gnu
                rustup target add ${{ matrix.arch }}-apple-darwin
            fi
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.arch }}-unknown-linux-gnu
        if: matrix.os == 'ubuntu-latest' && matrix.arch != 'armv7'
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.arch }}-unknown-linux-gnueabihf
        if: matrix.os == 'ubuntu-latest' && matrix.arch == 'armv7'
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.arch }}-apple-darwin
        if: matrix.os == 'macos-latest' && matrix.arch != 'armv7'

      - name: Build the project
        run: cargo build --release --target ${{ matrix.arch }}-unknown-linux-gnu
        if: matrix.os == 'ubuntu-latest'  && matrix.arch != 'armv7'

      - name: Build the project
        run: cargo build --release --target ${{ matrix.arch }}-apple-darwin
        if: matrix.os == 'macos-latest'  && matrix.arch != 'armv7'

      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: leetpw-${{ matrix.os }}-${{ matrix.arch }}
          path: target/${{ matrix.arch }}-unknown-linux-gnu/release/leetpw
        if: matrix.os == 'ubuntu-latest'  && matrix.arch != 'armv7'

      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: leetpw-${{ matrix.os }}-${{ matrix.arch }}
          path: target/${{ matrix.arch }}-apple-darwin/release/leetpw
        if: matrix.os == 'macos-latest'  && matrix.arch != 'armv7'

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/${{ matrix.arch }}-unknown-linux-gnu/release/leetpw
            target/${{ matrix.arch }}-apple-darwin/release/leetpw
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_PAT }}